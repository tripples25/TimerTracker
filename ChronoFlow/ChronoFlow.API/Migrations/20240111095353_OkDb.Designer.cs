// <auto-generated />
using System;
using ChronoFlow.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChronoFlow.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240111095353_OkDb")]
    partial class OkDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserEmail");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.TemplateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.UserEntity", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.EventEntity", b =>
                {
                    b.HasOne("ChronoFlow.API.DAL.Entities.TemplateEntity", "Template")
                        .WithMany("Events")
                        .HasForeignKey("TemplateId");

                    b.HasOne("ChronoFlow.API.DAL.Entities.UserEntity", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserEmail");

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.TemplateEntity", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("ChronoFlow.API.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
